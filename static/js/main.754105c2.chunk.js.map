{"version":3,"sources":["components/InputError.jsx","validation/loginRegisterValidation.js","App.js","index.js"],"names":["InputError","props","message","className","no_digit_regex","digit_regex","space_regex","password_length_regex","alpha_numeric_regex","email_regex","validateCombo","value","rules","val","toString","trim","includes","match","App","useState","validatenow","setValidateNow","submitoperaiton","setSubmitOperation","empcode","name","department","gender","dob","joiningdate","previousexp","salary","address","id","records","showAlert","alertType","alertMsg","empdata","setEmpData","empcodeerror","nameerror","departmenterror","gendererror","doberror","joiningdateerror","previousexperror","salaryerror","addresserror","empdataerror","setEmpDataError","handleChange","e","persist","target","console","log","prevState","checkValidity","useEffect","fetchAllRecords","testdata","Date","valueOf","error","isEmpty","obj","prop","hasOwnProperty","Container","Alert","variant","onClose","dismissible","Heading","Form","noValidate","onSubmit","preventDefault","submitteddata","JSON","stringify","map","record","Row","Group","as","Col","md","Label","Control","type","onChange","placeholder","Check","inline","label","checked","feedback","Button","Table","striped","bordered","hover","size","responsive","colSpan","index","key","onClick","filter","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.754105c2.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst InputError = ( props ) => {\r\n    return (\r\n        <>\r\n            { props.message && <small className='text-danger'>{ props.message }</small> }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default InputError","const no_digit_regex = /\\d/g;\r\nconst digit_regex = /\\D/g;\r\nconst space_regex = /\\W/g;\r\nconst password_length_regex = /^.{6,20}$/g;\r\nconst alpha_numeric_regex = /^(?=.*[a-zA-Z])(?=.*[0-9])[a-zA-Z0-9]+$/g;\r\nconst email_regex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\nfunction validateCombo ( value,rules ) {\r\n    // console.log(value)\r\n    const val = value.toString().trim()\r\n    if ( rules.includes( 'REQUIRED' ) && val === '' ) return ( 'This Field is required' )\r\n    if ( rules.includes( 'ALPHANUMERIC' ) && val.match( alpha_numeric_regex ) ) return ( 'only alphanumeric characters' )\r\n    if ( rules.includes( 'NODIGIT' ) && val.match( no_digit_regex ) ) return ( 'No digits are allowed' )\r\n    if ( rules.includes( 'DIGIT' ) && val.match( digit_regex ) ) return ( 'Only digits are allowed' )\r\n    if ( rules.includes( 'NOSPACE' ) && val.match( space_regex ) ) return ( 'Space not allowed' )\r\n    if ( rules.includes( 'EMAIL' ) && !val.match( email_regex ) ) return ( 'Invalid email' )\r\n    if ( rules.includes( '6-20' ) && !val.match( password_length_regex ) ) return ( 'Password should be 6-20 characters long' )\r\n    return ''\r\n}\r\n\r\nfunction validateCode ( Code ) {\r\n    const alpha_numeric_regex = /^[ A-Za-z0-9]*/;\r\n    if ( Code === '' ) return ( 'Code is required' )\r\n    if ( Code.match( alpha_numeric_regex ) ) return ( 'only alphanumeric characters' )\r\n    return ''\r\n}\r\nfunction validateFullname ( fullname ) {\r\n    const digit_regex = /\\d/g;\r\n    const space_regex = /\\W/g;\r\n    if ( fullname === '' ) return ( 'Fullname is required' )\r\n    if ( fullname.match( digit_regex ) ) return ( 'No digits are allowed' )\r\n    if ( fullname.match( space_regex ) ) return ( 'Space not allowed' )\r\n    return ''\r\n}\r\nfunction validateEmail ( email ) {\r\n    const email_regex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    if ( email === '' ) return ( 'Email is required' )\r\n    if ( !email.match( email_regex ) ) return ( 'Invalid email' )\r\n    return ''\r\n}\r\nfunction validatePassword ( password ) {\r\n    const password_length_regex = /^.{6,20}$/g;\r\n    if ( password === '' ) return ( 'Password is required' )\r\n    if ( !password.match( password_length_regex ) ) return ( 'Password should be 6-20 characters long' )\r\n    return ''\r\n}\r\nfunction validateCPassword ( cpassword,password ) {\r\n    if ( cpassword === '' ) return ( 'Confirm Password is required' )\r\n    return ''\r\n}\r\nfunction validateIAgree ( iagree ) {\r\n    if ( !iagree ) return ( 'agree the terms and conditions' )\r\n    return ''\r\n}\r\n\r\nexport { validateFullname,validateEmail,validatePassword,validateIAgree,validateCPassword,validateCode,validateCombo }","import React,{ useEffect,useState } from 'react'\nimport {\n\tContainer,\n\tRow,\n\tForm,\n\tButton,\n\tAlert,\n\tTable,\n\tCol,\n} from 'react-bootstrap'\nimport InputError from './components/InputError'\nimport { validateCombo } from './validation/loginRegisterValidation'\n\n\nconst App = () => {\n\tconst [ validatenow,setValidateNow ] = useState( false )\n\tconst [ submitoperaiton,setSubmitOperation ] = useState( true )//true - add, false - update\n\tconst [ empdata,setEmpData ] = useState( {\n\t\tempcode: '',\n\t\tname: '',\n\t\tdepartment: '',\n\t\tgender: '',\n\t\tdob: '',\n\t\tjoiningdate: '',\n\t\tpreviousexp: '',\n\t\tsalary: '',\n\t\taddress: '',\n\t\tid: '',\n\t\t// update: false,\n\t\trecords: [],\n\t\tshowAlert: false,\n\t\talertType: 'success',\n\t\talertMsg: '',\n\t} )\n\n\tconst [ empdataerror,setEmpDataError ] = useState( {\n\t\tempcodeerror: true,\n\t\tnameerror: true,\n\t\tdepartmenterror: true,\n\t\tgendererror: true,\n\t\tdoberror: true,\n\t\tjoiningdateerror: true,\n\t\tpreviousexperror: true,\n\t\tsalaryerror: true,\n\t\taddresserror: true,\n\t} )\n\n\tconst handleChange = ( e ) => {\n\t\te.persist()\n\t\tconst name = e.target.name\n\t\tconst value = e.target.value\n\t\tconsole.log( name,' : ',value )\n\t\tsetEmpData( ( prevState ) => { return { ...prevState,[ name ]: value,showAlert: false } } )\n\t\tcheckValidity( name,value )\n\t}\n\n\tuseEffect( () => {\n\t\tfetchAllRecords()\n\t},[] )\n\n\t// fetch All Records\n\tconst fetchAllRecords = () => {\n\t\tconst testdata = {\n\t\t\tid: new Date().valueOf(),\n\t\t\tempcode: '123',\n\t\t\tname: 'Rajat Karmokar',\n\t\t\tdepartment: 'Admin',\n\t\t\tgender: 'male',\n\t\t\tdob: '2022-04-08',\n\t\t\tjoiningdate: '2022-04-08',\n\t\t\tpreviousexp: 3,\n\t\t\tsalary: '10000',\n\t\t\taddress: 'mumbai',\n\t\t}\n\t\tsetEmpData( prevState => { return { ...prevState,records: [ testdata ] } } )\n\t}\n\n\t// view single data to edit\n\tconst onEditHandler = ( id ) => {\n\t\tconsole.log( id )\n\t\tsetSubmitOperation( false )\n\t\tempdata.records.filter( record => {\n\t\t\tif ( record.id === id )\n\t\t\t\tsetEmpData( prevState => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...prevState,\n\t\t\t\t\t\tid: id,\n\t\t\t\t\t\tempcode: record.empcode,\n\t\t\t\t\t\tname: record.name,\n\t\t\t\t\t\tdepartment: record.department,\n\t\t\t\t\t\tgender: record.gender,\n\t\t\t\t\t\tdob: record.dob,\n\t\t\t\t\t\tjoiningdate: record.joiningdate,\n\t\t\t\t\t\tpreviousexp: record.previousexp,\n\t\t\t\t\t\tsalary: record.salary,\n\t\t\t\t\t\taddress: record.address,\n\t\t\t\t\t}\n\t\t\t\t} )\n\t\t} )\n\t}\n\n\t// update record\n\tconst onUpdateHandler = ( e ) => {\n\t\te.preventDefault()\n\t\tif ( submitoperaiton ) return\n\t\tsetValidateNow( true )\n\t\tcheckValidity()\n\t\tconst error = isEmpty( empdataerror )\n\t\tconsole.log( JSON.stringify( empdataerror ),error )\n\t\tif ( error === false )\n\t\t\treturn setEmpData( prevState => { return { ...prevState,showAlert: true,alertType: 'warning',alertMsg: 'Please fill all the details correctly' } } )\n\n\t\tconst submitteddata = {\n\t\t\tid: empdata.id,\n\t\t\tempcode: empdata.empcode,\n\t\t\tname: empdata.name,\n\t\t\tdepartment: empdata.department,\n\t\t\tgender: empdata.gender,\n\t\t\tdob: empdata.dob,\n\t\t\tjoiningdate: empdata.joiningdate,\n\t\t\tpreviousexp: empdata.previousexp,\n\t\t\tsalary: empdata.salary,\n\t\t\taddress: empdata.address,\n\t\t}\n\t\tsetEmpData( prevState => {\n\t\t\treturn {\n\t\t\t\t...prevState,\n\t\t\t\tid: '',\n\t\t\t\tempcode: '',\n\t\t\t\tname: '',\n\t\t\t\tdepartment: '',\n\t\t\t\tgender: '',\n\t\t\t\tdob: '',\n\t\t\t\tjoiningdate: '',\n\t\t\t\tpreviousexp: '',\n\t\t\t\tsalary: '',\n\t\t\t\taddress: '',\n\t\t\t\trecords: prevState.records.map( record =>\n\t\t\t\t\t( record.id === prevState.id && submitteddata ) || record )\n\t\t\t}\n\t\t} )\n\t\tsetSubmitOperation( true )\n\t\tconsole.log( empdata )\n\t}\n\n\t// delete a record\n\tconst deleteRecord = ( id ) => {\n\t\tconsole.log( id )\n\t\tsetEmpData( prevState => {\n\t\t\treturn {\n\t\t\t\t...prevState,\n\t\t\t\trecords: prevState.records.filter( val => ( val.id !== id && val ) )\n\t\t\t}\n\t\t} )\n\t}\n\n\tconst checkValidity = ( name,value ) => {\n\t\tlet error\n\t\tif ( name === 'empcode' ) error = validateCombo( value,[ 'REQUIRED','ALPHANUMERIC','NOSPACE' ] )\n\t\tif ( name === 'name' ) error = validateCombo( value,[ 'REQUIRED','NOSPACE','NODIGIT' ] )\n\t\tif ( name === 'department' ) error = validateCombo( value,[ 'REQUIRED' ] )\n\t\tif ( name === 'gender' ) error = validateCombo( value,[ 'REQUIRED' ] )\n\t\tif ( name === 'dob' ) error = validateCombo( value,[ 'REQUIRED' ] )\n\t\tif ( name === 'joiningdate' ) error = validateCombo( value,[ 'REQUIRED' ] )\n\t\tif ( name === 'previousexp' ) error = validateCombo( value,[ 'REQUIRED','DIGIT' ] )\n\t\tif ( name === 'salary' ) error = validateCombo( value,[ 'REQUIRED','DIGIT' ] )\n\t\tif ( name === 'address' ) error = validateCombo( value,[ 'REQUIRED' ] )\n\t\tif ( name )\n\t\t\tsetEmpDataError( prevState => ( {\n\t\t\t\t...prevState,\n\t\t\t\t[ `${name}error` ]: error\n\t\t\t} ) )\n\t\tif ( !name )\n\t\t\treturn setEmpDataError( {\n\t\t\t\tempcodeerror: validateCombo( empdata.empcode,[ 'REQUIRED','ALPHANUMERIC','NOSPACE' ] ),\n\t\t\t\tnameerror: validateCombo( empdata.name,[ 'REQUIRED','NOSPACE','NODIGIT' ] ),\n\t\t\t\tdepartmenterror: validateCombo( empdata.department,[ 'REQUIRED' ] ),\n\t\t\t\tgendererror: validateCombo( empdata.gender,[ 'REQUIRED' ] ),\n\t\t\t\tdoberror: validateCombo( empdata.dob,[ 'REQUIRED' ] ),\n\t\t\t\tjoiningdateerror: validateCombo( empdata.joiningdate,[ 'REQUIRED' ] ),\n\t\t\t\tpreviousexperror: validateCombo( empdata.previousexp,[ 'REQUIRED','DIGIT' ] ),\n\t\t\t\tsalaryerror: validateCombo( empdata.salary,[ 'REQUIRED','DIGIT' ] ),\n\t\t\t\taddresserror: validateCombo( empdata.address,[ 'REQUIRED' ] ),\n\t\t\t} )\n\t}\n\n\tfunction isEmpty ( obj ) {\n\t\tfor ( var prop in obj ) {\n\t\t\tif ( obj.hasOwnProperty( prop ) ) {\n\t\t\t\tif ( obj[ prop ] ) return false\n\t\t\t}\n\t\t}\n\t\treturn true\n\t}\n\n\tconst onSubmitHandler = ( e ) => {\n\t\te.preventDefault()\n\t\tif ( !submitoperaiton ) return\n\t\tsetValidateNow( true )\n\t\tcheckValidity()\n\t\tconst error = isEmpty( empdataerror )\n\t\tif ( error === false )\n\t\t\treturn setEmpData( prevState => { return { ...prevState,showAlert: true,alertType: 'warning',alertMsg: 'Please fill all the details correctly' } } )\n\n\t\tconst submitteddata = {\n\t\t\tid: new Date().valueOf(),\n\t\t\tempcode: empdata.empcode,\n\t\t\tname: empdata.name,\n\t\t\tdepartment: empdata.department,\n\t\t\tgender: empdata.gender,\n\t\t\tdob: empdata.dob,\n\t\t\tjoiningdate: empdata.joiningdate,\n\t\t\tpreviousexp: empdata.previousexp,\n\t\t\tsalary: empdata.salary,\n\t\t\taddress: empdata.address,\n\t\t}\n\t\tsetEmpData( prevState => {\n\t\t\treturn {\n\t\t\t\t...prevState,\n\t\t\t\tid: '',\n\t\t\t\tempcode: '',\n\t\t\t\tname: '',\n\t\t\t\tdepartment: '',\n\t\t\t\tgender: '',\n\t\t\t\tdob: '',\n\t\t\t\tjoiningdate: '',\n\t\t\t\tpreviousexp: '',\n\t\t\t\tsalary: '',\n\t\t\t\taddress: '',\n\t\t\t\trecords: [ ...prevState.records,submitteddata ]\n\t\t\t}\n\t\t} )\n\t\t// setEmpData( prevState => {\n\t\t// \treturn {\n\t\t// \t\t...prevState,\n\t\t// \t}\n\t\t// } )\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t<Container>\n\n\t\t\t\t{ empdata.showAlert === true ? (\n\t\t\t\t\t<Alert\n\t\t\t\t\t\tvariant={ empdata.alertType }\n\t\t\t\t\t\tonClose={ () => {\n\t\t\t\t\t\t\tsetEmpData( {\n\t\t\t\t\t\t\t\tshowAlert: false,\n\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t} }\n\t\t\t\t\t\tdismissible>\n\t\t\t\t\t\t<Alert.Heading>{ empdata.alertMsg }</Alert.Heading>\n\t\t\t\t\t</Alert>\n\t\t\t\t) : null }\n\n\t\t\t\t{/* Insert Form */ }\n\t\t\t\t<Form noValidate\n\t\t\t\t\tonSubmit={ submitoperaiton && onSubmitHandler || onUpdateHandler }\n\t\t\t\t\tclassName='my-5'>\n\n\t\t\t\t\t<Form.Row>\n\t\t\t\t\t\t<Form.Group as={ Col } md='4' >\n\t\t\t\t\t\t\t<Form.Label>Emp Code</Form.Label>\n\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\tname='empcode'\n\t\t\t\t\t\t\t\tonChange={ handleChange }\n\t\t\t\t\t\t\t\tvalue={ empdata.empcode }\n\t\t\t\t\t\t\t\tplaceholder='Emp Code'\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t{ validatenow && <InputError message={ empdataerror.empcodeerror } /> }\n\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t<Form.Group as={ Col } md='4' >\n\t\t\t\t\t\t\t<Form.Label>Name</Form.Label>\n\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\tplaceholder='Name'\n\t\t\t\t\t\t\t\tname='name'\n\t\t\t\t\t\t\t\tonChange={ handleChange }\n\t\t\t\t\t\t\t\tvalue={ empdata.name }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t{ validatenow && <InputError message={ empdataerror.nameerror } /> }\n\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t<Form.Group as={ Col } md='4' >\n\t\t\t\t\t\t\t<Form.Label>Department</Form.Label>\n\t\t\t\t\t\t\t<select\n\t\t\t\t\t\t\t\tclassName='form-control'\n\t\t\t\t\t\t\t\t// as='select'\n\t\t\t\t\t\t\t\ttype='select'\n\t\t\t\t\t\t\t\tplaceholder='Department'\n\t\t\t\t\t\t\t\tname='department'\n\t\t\t\t\t\t\t\tonChange={ handleChange }\n\t\t\t\t\t\t\t\tvalue={ empdata.department }\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<option></option>\n\t\t\t\t\t\t\t\t<option >Admin</option>\n\t\t\t\t\t\t\t\t<option >Technology</option>\n\t\t\t\t\t\t\t\t<option >Accounts</option>\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t{ validatenow && <InputError message={ empdataerror.departmenterror } /> }\n\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t</Form.Row>\n\n\t\t\t\t\t<Form.Group>\n\t\t\t\t\t\t<Form.Label className='mr-4 '>Gender :</Form.Label>\n\t\t\t\t\t\t<Form.Check\n\t\t\t\t\t\t\tclassName='mr-3 '\n\t\t\t\t\t\t\tinline\n\t\t\t\t\t\t\ttype='radio'\n\t\t\t\t\t\t\tname='gender'\n\t\t\t\t\t\t\tlabel='Male'\n\t\t\t\t\t\t\tonChange={ handleChange }\n\t\t\t\t\t\t\tvalue='male'\n\t\t\t\t\t\t\tchecked={ empdata.gender === 'male' ? true : false }\n\t\t\t\t\t\t\t// defaultChecked={empdata.gender.male}\n\t\t\t\t\t\t\tfeedback='select a gender'\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Form.Check\n\t\t\t\t\t\t\tclassName='mr-3 '\n\t\t\t\t\t\t\tinline\n\t\t\t\t\t\t\ttype='radio'\n\t\t\t\t\t\t\tname='gender'\n\t\t\t\t\t\t\tlabel='Female'\n\t\t\t\t\t\t\tonChange={ handleChange }\n\t\t\t\t\t\t\tvalue='female'\n\t\t\t\t\t\t\tchecked={ empdata.gender === 'female' ? true : false }\n\t\t\t\t\t\t\t// defaultChecked={empdata.gender.female}\n\t\t\t\t\t\t\tfeedback='select a gender'\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{ validatenow && <InputError message={ empdataerror.gendererror } /> }\n\t\t\t\t\t</Form.Group>\n\n\t\t\t\t\t<Form.Row>\n\t\t\t\t\t\t<Form.Group as={ Col } md='3' >\n\t\t\t\t\t\t\t<Form.Label>Date of birth</Form.Label>\n\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\ttype='date'\n\t\t\t\t\t\t\t\tplaceholder='Date of birth'\n\t\t\t\t\t\t\t\tname='dob'\n\t\t\t\t\t\t\t\tonChange={ handleChange }\n\t\t\t\t\t\t\t\tvalue={ empdata.dob }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t{ validatenow && <InputError message={ empdataerror.doberror } /> }\n\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t<Form.Group as={ Col } md='3' >\n\t\t\t\t\t\t\t<Form.Label>Joining Date</Form.Label>\n\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\ttype='date'\n\t\t\t\t\t\t\t\tplaceholder='Joining Date'\n\t\t\t\t\t\t\t\tname='joiningdate'\n\t\t\t\t\t\t\t\tonChange={ handleChange }\n\t\t\t\t\t\t\t\tvalue={ empdata.joiningdate }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t{ validatenow && <InputError message={ empdataerror.joiningdateerror } /> }\n\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t<Form.Group as={ Col } md='3' >\n\t\t\t\t\t\t\t<Form.Label>Previous Exp (years)</Form.Label>\n\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\tplaceholder='Previous Exp'\n\t\t\t\t\t\t\t\tname='previousexp'\n\t\t\t\t\t\t\t\tonChange={ handleChange }\n\t\t\t\t\t\t\t\tvalue={ empdata.previousexp }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t{ validatenow && <InputError message={ empdataerror.previousexperror } /> }\n\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t<Form.Group as={ Col } md='3' >\n\t\t\t\t\t\t\t<Form.Label>Salary</Form.Label>\n\t\t\t\t\t\t\t<Form.Control type='text'\n\t\t\t\t\t\t\t\tplaceholder='Salary'\n\t\t\t\t\t\t\t\tname='salary'\n\t\t\t\t\t\t\t\tonChange={ handleChange }\n\t\t\t\t\t\t\t\tvalue={ empdata.salary } />\n\t\t\t\t\t\t\t{ validatenow && <InputError message={ empdataerror.salaryerror } /> }\n\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t</Form.Row>\n\n\t\t\t\t\t<Form.Group >\n\t\t\t\t\t\t<Form.Label>Address</Form.Label>\n\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\tas='textarea'\n\t\t\t\t\t\t\ttype='textarea'\n\t\t\t\t\t\t\tplaceholder='Address'\n\t\t\t\t\t\t\tname='address'\n\t\t\t\t\t\t\tonChange={ handleChange }\n\t\t\t\t\t\t\tvalue={ empdata.address }\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{ validatenow && <InputError message={ empdataerror.addresserror } /> }\n\t\t\t\t\t</Form.Group>\n\n\t\t\t\t\t<Button type='submit'>{ submitoperaiton && 'Submit' || 'Update' } form</Button>\n\t\t\t\t</Form>\n\n\t\t\t\t{/* All Records */ }\n\t\t\t\t<Table striped bordered hover size='sm' responsive className='mb-5'>\n\t\t\t\t\t<thead>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<th>empcode</th>\n\t\t\t\t\t\t\t<th>Name</th>\n\t\t\t\t\t\t\t<th>Department</th>\n\t\t\t\t\t\t\t<th>Gender</th>\n\t\t\t\t\t\t\t<th>DDB</th>\n\t\t\t\t\t\t\t<th>Joining Date</th>\n\t\t\t\t\t\t\t<th>Previous Exp (years)</th>\n\t\t\t\t\t\t\t<th>Salary</th>\n\t\t\t\t\t\t\t<th>Address</th>\n\t\t\t\t\t\t\t<th colSpan='2'>Actions</th>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</thead>\n\t\t\t\t\t<tbody>\n\t\t\t\t\t\t{ empdata.records &&\n\t\t\t\t\t\t\tempdata.records.map( ( record,index ) => {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<tr key={ `empdata${record.id}` }>\n\t\t\t\t\t\t\t\t\t\t<td>{ record.empcode }</td>\n\t\t\t\t\t\t\t\t\t\t<td>{ record.name }</td>\n\t\t\t\t\t\t\t\t\t\t<td>{ record.department }</td>\n\t\t\t\t\t\t\t\t\t\t<td>{ record.gender }</td>\n\t\t\t\t\t\t\t\t\t\t<td>{ record.dob }</td>\n\t\t\t\t\t\t\t\t\t\t<td>{ record.joiningdate }</td>\n\t\t\t\t\t\t\t\t\t\t<td>{ record.previousexp }</td>\n\t\t\t\t\t\t\t\t\t\t<td>{ record.salary }</td>\n\t\t\t\t\t\t\t\t\t\t<td>{ record.address }</td>\n\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\tvariant='info'\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={ () => onEditHandler( record.id ) }>\n\t\t\t\t\t\t\t\t\t\t\t\tEdit\n\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\tvariant='danger'\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={ () => deleteRecord( record.id ) }>\n\t\t\t\t\t\t\t\t\t\t\t\tDelete\n\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t} ) }\n\t\t\t\t\t</tbody>\n\t\t\t\t</Table>\n\n\t\t\t</Container>\n\t\t</div>\n\t)\n}\n\nexport default App\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n\t<App />,\n\tdocument.getElementById( \"root\" )\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}